now that we are live i wanted to ask for
five seconds before we posted the street
yard link right so if anyone wants to
come and be part
of the round table especially if they
want to be in the hot seat and we'll
focus on your project
feel free to hit the stream um my
this is our round table where we discuss
what our projects are as well as any
help that we might need from them who
would like to go first
i could start so uh my project
i'm is a goalie bot a
robot or a bot that helps build mass
agreement
uh through evidence and logic and
helping people understand
each other better um i have not been
doing much of anything on it
um i'm mostly moving in to new home and
taking a new part-time job so i haven't
done much
uh the the type of things i'm looking
for as far as
help are people
like if there are two people that are
willing to have a
debate or a discu you know trying to
come to agreement on a contentious issue
that they'd be willing to go through the
gullible process
that would be helpful to me and then
also if anyone has any
things where they're trying to convince
the world that
the world should believe x or something
um
then that might be something where we
could go through although it's helpful
also if they have someone that
kind of doesn't think that that's uh
important
uh then you know we could use the
process on that as well
so those are some ideas and then anyone
who wants to
kind of play around with it
all right i can go next then my brain
will be like yep we went from
left to right so anyway uh my projects
are solution raising which is an
hour-long conversation where we generate
adjacent possible solutions that we can
implement now if we had a hundred
thousand people
sorry ten thousand people and a hundred
thousand dollars and we held one this
last week i didn't even pick the topic
till the morning of eric actually picked
the topic
we did food security more global food
security but
what's about to come down the pipeline i
think is going to be rather devastating
in the world um did we solve it
no no we did not really even come we got
a little too into how do we get to 10
000 people um which is what my other
project
is which is the meta learning magic we
held
our very first of the six-week course we
held week one this last week we
concentrated on health and i thought it
actually went
very well it was i was expecting to be a
little more of a show a little more
of like okay
we have to find the power here and and
massage it
and make it work and i actually found
that we just kind of like when we did it
that there was a lot of power that
happened in the in the conversation
and we were able to people either came
with meta problems
like myself or ones that we i do think
ended up getting a little
a little bit of an improvement on and
we'll see next week if people took um
natural action on their goals right
whether it was something that
that is gonna be more and i'm really
excited
it's hard for me to wait this six weeks
like i just want the next thing coming
and so i honestly don't need help from
anyone
i just need patience with myself and to
start concentrating on like work-life
balance of like getting my
my life in order and truly just allow
the process
allow the six-week course while i'm
creating the sixth week during the six
weeks so
that is my update
my project is conferrati it is meant to
be an information source that earns your
trust
and then sort of the sister project
wikilection which is that same
information source you can
are the information source earns your
trust but centered around politics
um i have been working with someone on
the prototype for wiki election
and then uh recently have sort of done a
bit of a pivot to focus on conferadi
instead
um and i've been working with that same
developer and bentley just to sort of
figure out
if uh going out a platform is to do the
right route what uh
what what technologies to use that sort
of thing um
so still working on the specs for
confronting itself
and we'll continue doing that and
hopefully get that project started soon
i actually did think of something i'm
trying to work through in my head which
is whether or not solution raisings
should start its own youtube channel
either takeover idea cafe's channel
which has
just under 100 subscribers um or start
its own partly because i want to
i know i can't do it on my own but i
want to do a reach out to
like existing people on the platform who
have a lot of subscribers and have them
host the solutions i actually am hosting
a solution raising this thursday with a
lot of the mtmlm people
i put it out to the antelom community
not looking for people with influencers
and it ended up being the creators that
are more comfortable being on camera
to come and participate in that and it
got me thinking that could be a way to
grow solution raising
but i also don't want to do it on my own
like i really
want like someone else who wants to take
on
a youtube channel right take on like the
algorithm and creating and i'll just do
the recording and show up
and i guess i don't know if that's
taking on too much for me whether it's a
good idea at all whether i just keep it
there
and i'm looking for like maybe a five
minute conversation on it not
to take up the whole hour for sure it's
like work through
the pros and cons of
i think idea cafe and solution raisings
are close enough that none of the
viewers would like
unsubscribe because it was so different
so
i think that's good um
yeah and if if you do have a youtube
channel you can always give someone else
access to post and stuff
so yeah i can't think of a real
downside
of doing that i guess i guess one of the
questions would be if i continue doing
on my wednesday morning solution raising
which is basically just game b people
um and then i'm also reaching out to
influencers to be like hey i noticed you
cared about this topic want to do one on
cancer who else do you want to invite
that that is which is kind of the idea
of what idea cafe was to begin with was
to reach out to influencers and have
them bring
come and bring kind of part of their
audience with them
um do i keep game b on together i'm not
together tech on jubilee create
something amazing's channel
the game b1 and then just have the
influencer solution raisings on the
the other ones so that the um
influencers themselves can point to a
hopefully slightly more
um professional channel right that isn't
all of my random thoughts constantly but
do i keep my other game be on their
yeah game b solution raisings on that
one um
or not what is that
yeah i think it's a bad idea to mix the
game b
ones and the other ones just because
anyone who's interested in solution
raising probably wouldn't be too
offended by
game b um
so it might be good to combine all those
and then have your
random thoughts on your jubilee channel
yeah yeah and whatever my new fire
is fire start on that channel and then
they kind of go
that's a great way to to do it it's
always good to have kind of a general
place like a individual blog or
something so you can try things out not
have to build a whole brand
to try an idea yeah yeah so maybe it is
time to graduate solution raising
onto its own and it makes sense to take
over idea cafe right part of my worry is
like
do i want 12 12 channels no yeah no
idea is enough of the similar and it's
not continuing on and it can kind of
show my
progression of what a conversation can
do yeah
yeah and i think idea cafe because it's
kind of like the birthplace
for if you don't have a solution well
wait i'm sorry
if yeah yeah they're similar enough i
i think it'd be okay
all right awesome that was my thing
thanks for helping me
through it and does anyone else have
anything they would like to
discuss and we have that other idea for
the hot seat although um
radic isn't here and neither has vincent
that i'd suggested last week of like
kind of problem solving how we get data
entry people for you guys
right that are looking to put in like an
hour a week or you know i mean like
micro amounts but
volunteer or you guys all share
someone's
you know time pay the minimum wage in
another country i mean we can
brainstorm solutions if that's something
you guys are looking to solve right now
i mean that's not really for my project
so
yeah i'm kind of on the um
i haven't put much thought into it so uh
so yeah i'm not sure if i'm ready to use
that right now
i did hire someone to do some data entry
and it worked okay
um but i'd be looking at new
sources so yeah i think eventually
adrian and i pedro is data entry
something you're looking for yet adriel
not yet i mean it's definitely going to
be needed at some point but until
there's like
sort of you know a more functional
prototype that's waiting for data entry
then uh yeah it won't need that and then
for for
the most point the goal is to use the
prototype to gain an audience and then
to
check the audience to be like hey who
wants to help
actually you know populate this thing
yeah for mine
um it it would be better to have
a
building these
argument trees are
they're designed to be easily understood
but to do them well
it's kind of like creating a video or
music you know
it takes a lot of work and it looks
simple when it's done
but to do it well it really takes some
thought
although it could be seen as a puzzle so
it would be interesting to
you know give people the um
you know as volunteering they might
might also find it
pleasurable to to try and solve a
problem like that
um so yeah
i can't think anymore to chat about that
it's a good idea though
all right so who wants to be in the hot
seat then for an id in the hot seat
hey joe are you getting any um
i know radix not here so it's probably
not fair to have to
do that um but uh have you seen any more
prototypes or
any more thing being deployed in the
last several weeks
i'm not still seeing any movement on
wiki election itself
like on the earlier prototype um
i think that radek was starting a new
job soon
so i think if it's not done soon it's
probably
not not getting done um
yeah that part i wasn't sure if it was
going to happen it sounded sort of
up in the air um and that's i guess a
part of the reason for the
pivot to conforti to sort of also help
power
wiki election and with this part of the
project
intentionally being sort of multiple
developers and having
closer to i guess a proper development
environment where
i can go you know and hire one or two
people on upwork
and then hopefully also have uh you
or erratic assist with the
yeah so right now you're you're spending
time
writing up some specifications yeah
yeah and uh have thought a bit on this
sort of you know
is it worth it to go the platform route
um
and i do think you know there's gonna
end up being like five to ten portals
in the not too distant future um and
that's good
going to sort of be a common way to spin
off information
because con fraud is going to sort of be
the main one but that's going to get
unwieldy
fast for for various topics um
yes because if it did there's nothing
else we could talk about that but
i do always feel a bit weird with
getting super technical
on a channel that's not necessarily
meant for that
i'm i'm down with that i can also turn
off my camera and
don't know will you guys go go techy and
if i have anything to add i can go back
in like we did a couple weeks ago
um one of the other topics if you don't
want to discuss that today we could talk
about um i know with brent weinstein
getting basically kicked out by facebook
and jim rutt coming back from a
sabbatical to kind of say
we need to get off of facebook and on to
anything else we could talk about that
um why now and not like
this was always a problem we always knew
facebook needed to be
um have an alternative but the issue is
there's dozens of alternatives and
there's a reason we're on facebook like
it feels weird to now be like well now
that brett's not here
we'll go over here instead of
like wait is like is this the place
where the people are did we was he
instrumental was he
was he creating game b he was creating
unity 2020 like what
like it feels pretty mature to switch
platforms and yet needed like it
was kind of needed a year ago and a year
from now but i don't know about right
now with this cat anyway
that that's a possibility right like is
this the the thing that
changes the direction of the whole thing
i don't think so
i think you know oh and there's already
server everything else there
like how would people find game b me
right like
they're not on me or whatever that was
gonna be me maybe
that that we're not on there and that's
part of having the facebook group do we
mean shutting down the facebook group
completely or with all of its brand
like what happens oh that was one of the
things that was more for yesterday
someone suggested we change the branding
of our facebook page to
like game b project slash together tech
because you'll get very confused as to
what together tech is even though it's
in the url
um anyway yeah i can put that on the
agenda for
for friday friday
yeah i was looking so i guess facebook
i didn't even hear about that until just
now but it looks like they
suspended his account and put it back up
but it was mostly uh
automated system
yeah and then there was questions around
like it said something about it's been
reviewed and
banned and so it's like well wait it was
automatically reviewed
we're also having reports of like things
that would get them banned now
um that like it's like eight years ago
you said this thing
right it was false information it was
like yeah you guys weren't
onto false information then like you're
really gonna go back and ban
someone over what they right what they
posted eight years ago
like it's facebook is scrambling people
are scrambling
like it's it's a very chaotic time and
this is part of why
influencer culture like having one
person with a million followers on my
new brett has um
that then when it goes down you lose
those followers like how else are people
supposed to find him right he's on
youtube he's
got his his personal channel but people
don't necessarily know to hit like
we need to build our whatever we're
building in a in a
way that's resilient right when it's
like we know that
the platforms are going to kick us off
what happens when they do
right like where where's the fire
meeting place
right like when you go leave the house
and go to the when internet goes down
where do we meet where do we
where do we actually um
i mean that's part of what metal and
room magic is um the magic
in it is that it's growing outwards in a
way that hopefully we don't necessarily
we don't need to be dependent on a
platform because although we are
we're on facebook and facebook messenger
if it goes away i know the six people in
my group
right and as we grow up from there we
have people's email addresses it's
somewhat easier to be like facebook
kicked us off we're on discord now this
kicked us off we're here now
like facebook being the only come
through us
direct message people through us don't
collect people's emails because it's
just not
as a normal thing right you don't ask
people for emails they come into your
group
um and that they have the power to just
kick people off and not give them any
warning
is gonna come back to bite facebook on
the ass like you you
like being both of those things is the
hurts your membership not members
customers
the products it hurts your products
because that's what we are on facebook
most doesn't look this is naturally
starting a conversation so
i'm totally down with the more technical
side of
kamparati i just want to
chat that yeah i also
wanted to mention that i may not um
with everything going on i might have to
cut this uh
my game b involvement down to one
meeting a week
uh i mean like so i might not be as
i mean if i could make it on saturdays i
was thinking friday would probably be
better for me
um because we're starting to want to do
things on saturday mornings
yeah i might not be as consistent as i
have been in the past
on this one and this how are people
finding i mean
how are people how are you both finding
the saturday morning because i like us
being able to have
this time to just focus on our projects
and have that but if we're not
like for the last few weeks it's been a
lot like you guys haven't necessarily
moved forward on your projects through
import on other things
this might not be the most um useful
time for you guys right if other people
aren't coming so i've got to go deal
with my small car
yeah um i think that we
um yeah we're just probably just hitting
a lull where
we're not making much movement so maybe
it's not as valuable we could switch to
every other week or something
or just even wait until someone says
could keep the time slot open and if
someone says oh i need some help on
something then we could
we could do it um so that that may be an
option as well
like when it like kind of treat it
somewhat like a um
project raising we still do what we do
where we and we
introduce our projects and ourselves
then we switch over to the hot seat so
we kind of only do them when we have
someone for the hot seat
yeah i think it makes makes sense for
one of us has a pressing
issue with our project which i don't
know that's never gonna happen like even
my thing i brought up right like i
wouldn't have
i wouldn't have called a meeting for it
i wouldn't have been like hey
yeah i need to figure to create my own
youtube video on the channel
yeah that seems to be a good a good
option i also feel like with together
tech since we're doing the um
foundational documents
it's bringing up a lot of the
conversations we're needing to have and
it does seem to i don't know what's
happening when we're done that though
right
like we are figuring out how to make
decisions we're not actually making the
decision if that makes like we need that
in place first
and how how that looks so
i'm definitely down how about if this
sounds good to both of you how about we
um
cut this the saturday 9 a.m whatever
time that is
session until the new year and then in
the new year kind of reintroduce it with
a um this time slot
we can even have people sign up right
and say over long in advance say this
person
right if you have a project i'm gonna be
in the hot seat
we will know when they are you can see
who's gonna be there and we'll at least
know
because yeah i'd prefer to come to these
anyway with somebody in the hot seat so
we can
focus on on a new yeah that's a good
idea
and then we might we might have them
weekly right because then if there's a
sign up people might
like oh there's sign up for four weeks
so i better be the fifth week so i
better be the sixth
week so i better be and and also that
invitation of like yes
and you can hold your own like these six
people who just signed up could hold
their own at any time on a saturday
and offer solutions to each other
and that sounds like a good idea yeah
okay
all right so after today we won't meet
next week we'll put something out
explaining that saying that we're not
gonna
but we're gonna put something out who
would like to put that out because on me
typing out thoughts is never
quite great i can butcher it i mean i'm
down with letting it be whatever comes
out of my head
and i guess we need to update
several places yeah i'm not great at
that either
right leave the crumbs behind follow the
crumbs to get to where we are but yeah
um i don't know where to update it
i could probably take that on unless you
really want to joe
not really um could that end it being
like a
uh sticky post on the the facebook group
sort of you know so for the next two-ish
months
when people load up that's the top ones
and
it's something like right we had these
sessions
we're going to be doing them again in
the new year but we didn't have people
sign up so
if you want to sign up you use this post
um that's i can't quite think
of how to word all that so if you want
to create that post and then i can try
kind of go in and
um take it off of the other
places that might be confusing people if
they find it
written differently maybe just
a spreadsheet with like the day the date
of
the first saturday in in january the
first maybe four or five and just
hey if anyone wants to sign up um
do we want them to sign up two months
three months in advance though
their project might not exist anymore to
say hey we will have a way to sign up
uh in late no late december for
individual projects to be in the hot
seat yeah
or yeah they could just post a comment
on that
on that post because you don't want to
be too complicated
yeah and then i think like we put up the
spot to
accept the posts and then you know two
weeks or three weeks prior we can start
start start reaching out to people and
if they don't respond then they lose
their spot or they get
bummed
if anyone responds at all right yeah
all right the other option right now is
if we don't have anyone in the hot seat
we're saying you know just to hang out
we don't need to i have another
conversation in half an hour
i booked them up back-to-back because i
knew i'd be
somewhat cognitively available at 10 it
might not be at noon
too much time in between yeah we don't
need to hang out and
and spend time for the next half an hour
if we don't have anything
to to discuss
okay yeah i mean if if wants to hang out
i wouldn't mind chatting about the tech
stuff for five to ten minutes just to
yeah all right how about i leave and you
guys continue with that and stop the
recording when you want because it might
be that it helps somebody else with our
project as well
yes it's probably stuff all right thanks
guys i'll see you on friday
all right thank you
all right um so i was going through and
sort of trying to figure out
is it worth doing the extra work to make
this uh platform
um knowing that sort of then each portal
becomes its own its own project
um and that is sort of the i guess the
terminology and sort of i guess the
structure and how i was thinking about
splitting it up
is the conference platform itself would
be called just that it's the platform
where
users would never use that directly they
would only be using it through portals
and then like there would end up being a
portal for
for wikilection a portal for
it's probably going converati end up
being a portal for like game b projects
um the idea being that
the platform sort of shares
the data between the portals
not all the portals would like no portal
what what have all the information it
would just sort of be a slice right so
like
wiki election would be really only be
looking like politicians and lobbyists
and people
and for organizations that we'll be
looking at like parties and maybe
lobbying groups
um in the comment variety what we'll be
looking at like organizations and you
know people
in the c-suite and on boards
um so it would be sharing the data that
way it would be sharing the interface
and so like you know the the um
the just the way that the navigation is
structure everything in the top bar
like the icon and the the label of the
portal
will change the positioning of the
module
selector would be the same and it would
just be what modules are inside
right so like regulation
might have like people and elections and
and stuff like that as modules and
whereas of course confronted wouldn't
have elections
um and then that shared interface is
also
sort of the interface used to build the
pages itself and those will have a lot
in common where
really there's going to be pages that
just sort of you know a home page
a page to list records and a page to
show records that's kind of the core
of it right we're like the top level
navigation for
wiki election like it's going to end up
being you know things like
people organizations elections
um that might end up or i guess and
legislation
and then you can go to each one of those
and then that would let you sort of
drill into the underlying data so if you
go to legislation
first of all probably have to search by
your area because
it's going to default to say oh if i'm
in canada it's going to show me canadian
legislation um i can still you know if
i'm
being nosy i can still go look at the us
but the idea is that
it would help you find one piece of
legislation
and then when you go to view that that
record you can see you know
who voted on it who submitted it and you
can start to drill into the information
that way
um and then finally the goal is that
they would have a shared login
so like if you're logged into one it
would be a bit like google right where
you've got like
your app selector and then you can
switch apps and it keeps you logged in
it's the exact same account and now
you're just in you know
google docs instead of
google sheets
um so that is sort of the the basic idea
behind what
the platform would sort of be providing
and then each portal
effectively wouldn't need to specify
what objects or what tables
it's looking at along with any sort of
built-in filters like the you know four
people
on wikilection they would mostly just be
looking at politicians so like unless
you know
a ceo has some sort of a background
that involves politics then they
wouldn't show up on work election at all
um similar to that
is that sort of top level setup where
each portal is put into modules
and then that's just you know your top
level options like wikileaks
having people organizations elections
and so on um and
each of those modules would sort of be
designed to allow for okay you're going
to find this record
you're going to view it and here's you
know the things that you can drill into
and how that layout will look
um and then those would end up being
accessed
initially just through a subdomain on
converati
right so you would have like
app.confronti.com
is the just the main app that's going to
end up being super unwieldy
and then we'd start out with
wikilection.com
wikilection.conferrati.com being
wiki election with the end goal for that
to end up being mapped
to also just app.confrontid.com
um and then spinning up new new portals
will sort of be
like that and that part you know
it's not trying to be salesforce it's
not trying to be like everything is
super streamlined to set up if it's you
know
editing config files and trying to like
enter in field names in
x y coordinates on a canvas whatever is
needed to
to power that but but that basic idea of
the platform really just being like
that canvas to hold or to power these
portals
and the portal displays modules which
can then
sort of have you unique controls to look
at
information to find it to modify it etc
um but then those modules could also be
reused across any of the other portals
does that make sense yeah
i think in general if you know from the
beginning that
you're going to want to have a flexible
ui that can
display you know different
content and and maybe even hide
different parts out
and filter and sort then it's not that
difficult
now i i was also hoping that the core
chunk of this
technology could also be used on a
completely different
database of data like you know for
no code you know choosing no code no
code
software and stuff like that right um
so that would be a separate database
than the conference one
in the end it might end up being in the
same one
because there's there's gonna be core
things like organizations
that will probably spread across every
single app or you know
close to it and so there might not be a
lot of bleed over to start with but
eventually you know if you end up with
or you know entries in the organization
table for things like google and
microsoft and
and things like that and they are
involved in some of these
you know here's 10 apps that that one's
bought by microsoft and that one's by
google
and you know here and then also you you
using these same like organizations and
people and projects
for the gamebee projects you can start
to reuse sort of
all of those lists anywhere that they're
needed and as
they grow yeah i think to start with
there wouldn't be overlap
but once you start to like track
organizations and stuff like that
you would kind of want it in the same
list and
yeah some of the apps won't have
organizations at all
so like if it's a whole bunch of home
schoolers that are trying to create
virtual classrooms and they want to
make sure the kids are diverse then
you'd want to
you know that'd just be a small database
so having assisted we could spin it up
so the added complexity those
but and all the designs have always
wanted it to be very flexible on the
views
so if you have that then yeah as long as
you configure those views
then you can have multiple sites looking
at the same database
or you know you can create another site
and have it have its own database so
right it should be flexible enough
to to do that um
yeah so i would i would leave that in
this in the requirements
uh and then just whenever you have your
developers
looking at it whether it's me erratic
just you know we'll
look at it see if there's any really
challenging bits to that
right but it would only be like
five or ten percent increase i think in
the okay
cool development that's good yeah and
then i think it would
be passing off some of the development
work to me or to whoever ends up doing
that like
portal setup side yeah which is kind of
what i want right it's where i can go in
there and as long as the
the platform is still doing its thing
and up and online
then i can keep building out the
individual portals and then as i'm like
oh i can't
afford on this portal until i have these
features that's kind of the
immediate future that i see for con
variety is where there's the team
working on the platform to sort of you
know
like the new pieces of lego hey we just
came out you know with
a new wing for a spaceship great now i
can build that spaceship that i've
been planning something similar to that
where as the new controls come out as
there's the
you know as new new uh tables are added
to the data set
you can start to figure out where that
fits in
like you know the wiki election portal
might you know it would definitely show
legislation
on friday main app might like at the
deepest levels
be adding that to the scoring but you
would have to dig in sort of very
specific ways to ever actually see
legislation in that side of things
but you know it would still be in the
underlying data and i expect that some
apps might start out being completely
isolated
they would still be in that overall pool
of like we could eventually connect
those tables to something else
if needed but in the end if it was just
three tables that
always lived on their own the the
platform could still support that
yeah yeah cool cool
um and then there was the other part
where we were talking about potentially
using ruby on rails
and i had gone through and sort of tried
to figure out which of the features that
ruby on rails provides um what i sort of
be wanting to use
and i used that same article that i had
sent before
and honestly almost everything i i read
through
like some weren't going to be needed for
the first
six months or a year but like down the
road i can see like yeah i would totally
want that
right like things like payments
where i definitely don't need that on
day one but like
within you know six months or a year
there's probably going to be
various reasons to do payments and then
the ability to just have okay great they
have
a gem that you can plug in and you're
going to need merchant accounts and
and and stuff like that but from
everything i've read
about ruby on rails that's sort of the
selling point
is that it might not be exactly what you
want but for prototype purposes
and you know you can always tweak it too
um
it being that like you get started there
it can you know really
streamline that initial development
and then after that i i think it's just
regular
ruby development like to do stuff that's
not in a gym
um like i went through that page yeah i
don't think ruby development would be
any faster than
um right yeah like just
developing new things i don't i don't
expect to be faster it's just the gems
that speed things up
but i'm saying a gym on ruby i don't
think is any faster than
using the pre-built tools from whatever
provider you use
to do
payments so they've all got that
those levels of libraries
yeah if you're talking about it being a
back end and then you have a front end
if you're going with a payment provider
you don't use you use the payment
provider as
the back end
well no but this is like i i assume
it then allows like you know it it it
provides that gateway for your software
to talk to
the gateways right and for because
there's gonna need to be something
on your own back end to talk to but you
don't you don't need that anymore
that's like a one line
thing
i mean you you have your okay your back
end api
you know on thing and it it just needs
kind of a pass-through to get to theirs
to validate
who you are but after that it's all
handled from the client
directly to their back end right
that's kind of old tech yeah i'm really
weirded out by
the conversation around ruby on rails
then it seems like everyone that
that works on that talks about it as
though that's the the
did see a friendship three years ago it
was
but that's all it is this article is
from 2020
well people still write and they're
talking new articles based on old
information
you know what i'm saying yeah but this
is from like
a ruby on rails dev house like that's
what they do is they
i was looking at their at their site and
sort of what they offer and their core
technologies are ruby on rails and react
like that's the things that they have on
their site as like right well ruby's on
rails is what they know so that's why
that's what their articles would say
you're looking at a bias right but i
guess
we're right
and if you want to send me the articles
then i can see if there's anything in it
it's still just that
yeah i i can send you that one it's
really just sort of talking about
the the gems but if it's like if all of
the
or at least you know the majority of the
different dev environments already have
that
and it's you know just like is what
other
technologies because i know that react
is a front end so what other back ends
would have this kind of a library that i
can go see
what sort of pages they have and what
sort of library are you saying people
are talking about
for payments you directly hit the back
end of the
of the payment provider you don't
if you're doing a pass-through it's it's
a simple pass-through that
that gym can do a lot of stuff
i mean maybe it's hooking it up to your
database and stuff
i don't know i mean i would have to look
at it but you know
i haven't handled payments but a lot of
people
you know payments have been done without
ruby on rails for a long time
it just it does seem like yeah it's just
usually a crap ton of work
like i've worked on projects
i just don't think that's a lot of work
i mean i don't think you choose a whole
so which i mean so but everything else
you do would be harder on ruby on rails
then because you don't if we're if we're
using what radix already using
you don't write a back end
you don't have a it's the pre-built back
end when you create the database it is a
back end
you don't yeah
and then what like is then the front end
just connecting
and and working directly on the the
database
what's actually doing the work on the
automatedly built api
i mean it's it's it's similar to ruby on
rails that
you know instead of so in ruby on rails
you have to like
write the database then you have to
write the ruby code which is very very
fast because it's a prototype you know
because it's a thing but
on the on the new ones you you'd write
the database and it creates that api
piece for you
and then you use graphql so your front
end can decide what information it wants
now so there may be you know there
it may it may be that
um
yeah it really depends on how
complicated your payment
needs are like if you only have like one
price
for everyone then you in your database
you just need to know paid or not
you know are they recurring and stuff
like that so that's really short
if it's like you know you have a whole
bunch if you have different skus for
thousands of different products and you
need to integrate that with the database
of products
but still you're going to have a lot of
time with integration because the gym is
not going to be built for that specific
how you're storing that data right yeah
we need to work with the the specifics
of however the building system is
designed within con variety um
so in my notes from the last time that
we talked about this i
go ahead i mean the problem is you would
need to find
some ruby on rails developers
right right yeah that part i guess i
guess i'm
like trying to come to terms with
the information that i've read and sort
of why ruby even still exists at all
like why anybody would ever choose
to to to use it like why they're even
coming out with
new gems the same reasons works
because people are still pushing forward
i mean you know it's not
it's not like it's a bad thing it's just
you know
i think part of it too is also wondering
why wiki election is stalled and i feel
like part of it is
it like if there was sort of more things
that could just get plugged in
the goal is to be able you know to add
any of these new features
very easily we're just like oh we want
to do this great that's 10 hours instead
of the 300 hours
the things he's trying to build wouldn't
exist in a gym
right so i don't think that that's
that's related to the gems
okay and there's no gem for you know
abstracting out
relationships the scoring and all that
stuff
i mean you can go with ruby on rails but
i can't even manage a ruby on rails
i mean i could from a completely project
management standpoint
but i wouldn't know
i wouldn't want to spend the time
looking at ruby on rails code because
i'm not going to switch tech
um so i mean
but i don't yeah i just
i don't think it's so fast that um
that it's worth switching me personally
to switch tech
right okay um so then is
because in my notes from the last time
we talked about this i had sort of like
notes to compare ruby on rails to
firebase
is firebase sort of like the back end in
this case and it's also so it's the
database and it's the automated api
that you were talking about yeah yeah
okay
now like i don't know if firebase like
has an equivalent
plug-in for payments pretty sure they
don't
but firebase has like the built-in
membership and stuff
okay yeah when i went to look at that
article
let me move this window over so i can
switch although i'm using mongodb
instead of firebase but yeah
um yeah because when i went and looked
at towards the
spot yeah when i was looking at that
page actually here i'll
put this in the chat just so you can
sort of see the same thing that was
the same article as last time when i
went through i was trying to figure out
which of these i i would use it more
came down to like their categories where
certain categories i'm like i don't have
skin in that game
i mean if it was useful sure like stuff
for debugging and stuff like that
what you know i'm not going to enforce
any of that on
the the developers because i don't
really have an opinion there
um but like pretty much everything in
the active record sections
in testing authentication um their part
on api sounded
interesting but i mean if that's being
automated that might not be the
that's not remitting the wheel the part
on security
um payments they all have security
authentication and authorization
so mongodb firebase
um ruby on rails right oh oh okay so
that one's gone so they all have that
the payment thing you know i
you know the like if you go to firebase
they
they don't say anything but you know
they have a
you know it's a one-page thing on here's
how you hook up
uh stripe um
okay but it but you know so they they
could have it could be more
like they may feel they may already have
but the thing is if you're talking about
a react front end
they don't have any screens but
i mean maybe they have innate
you know back end apis the sync up
the stripe um
like cancellations the stripe
chargebacks and sync it up to a database
in
whatever database back-end ruby you have
your ruby on rails hooked up too
right so maybe they have some more
advanced features like that but just
charging you know just like charging a
credit card
i could do that without a back end at
all just use right yeah and i'd want
the prop for billing back in right to
handle chargebacks and all that stuff to
like to whatever extent for most of
businesses
you just do those through the stripe
website
right how do you need that synced up to
your thing so that if someone does a
chargeback they lose access to the
database
well it's so it the the charges would
end up being for it but but it's also
for just like any app on the platform to
use right it could end up being
if there was a store at some point it it
it it it could use it
i imagine one of the first uses is going
to be like a very light version of
patreon
where it's not just paying for that it's
right like
it's probably step one is billing for
itself and then step two is
billing for projects yeah i wouldn't
assume that the
ruby on rails gym would handle that
scenario
yeah um the two gems i talked about one
of them was built by
it looks like shopify and i mean with
how they wrote it i wouldn't be at all
surprised if that was available in a
bunch of technologies because it sounds
like
um payments yeah there we go a
multi-tenant subscription
kind of billing system i mean yeah if
they have that that wouldn't be
something that
firebase has built in right
yeah i think in this case it's mostly
just like
the the api integration with
the popular gateways is basically how
they're doing it but payments is also
only
one of the things right um and then the
other things on that page was that there
was stuff to do with
uploading files which they it sounded
like they had some interesting tools to
do with like
you know um processing images and
i guess the thing for external storage
is that's probably
a common one too but has things you know
for if you're going to be storing some
files in the amazon elastic cloud or
google cloud storage et cetera
they have james for that it's stuff for
scheduled and recurring jobs which
sounded
interesting because i think that was a
challenge that uh
the radak was having with the scoring
was like the one to calculate it and
when they actually trigger it and that
sort of thing um and so they had some
apps for
these scheduling jobs and recurring jobs
stuff for search
um that's that's all i think that's as
built in
on like the scheduling jobs that's a
pretty standard fire based thing i don't
rather they have had trouble because
he'd never done it before
but you just write a function and say
when you
um okay yeah so if it's just like
if it's you know six or one half a dozen
of the
the other like if the majority of these
gems if it's you know
if firebase is missing two of them i
don't care like
it doesn't have to have every single
thing because it probably just has a
different
library where it's going to end up
having something that that rails
doesn't have um so as
as long as it has that same you know the
idea of it being easier because you can
just sort of
i mean the easiest to double check if
you had a list
of the you know you talked about putting
together a list and just glance at it
and say yeah firebase has that
firebase right um
um yeah like that page that i sent
basically everything under those
headings because i was
i started to to go through and listen to
each one which headings
um active record testing authentication
security payments uploading files
scheduling and recurring jobs search and
admin panel
those sections sort of on that page i
sent i was going through like actually
typing out each gem and then like for
the first three i typed all of the gems
under
those headers i'm like oh i just want
all of it
um and a big part of it too is i don't
know what gems are out there
and so if i were to end up using ruby
part of it would hopefully be
you know finding a ruby developer who's
used stuff in previous projects and sort
of has
they may have some stuff to suggest as
well which ends up being the same thing
for firebase right if you work with a
firebase developer that
they're going to have things that
they've used i mean ruby's been around
longer
so it's community is probably bigger
than
firebase or mongodb so it's um
i didn't get them gonna be a little bit
community kind of looks at ruby like you
are like where it's like
yeah it's there but why it there
that there was like it seemed like a lot
of developers were
shying away from it and being like yeah
it's okay but it's slow and it's this
and it's that
and there wasn't a lot of it it was more
just the articles that
were written and even the newer ones
were like it's meant for prototyping
it's meant for really quick stuff like
that i guess that's not to say it's the
only one
that's good for that um
so as long as firebase now
i guess it sounds like firebase so it's
the database and automatic api
and hosting and scheduling an
authentication authorization
okay and then you can sort of tack on
any extra back-end stuff that
you need as well yeah so it has
they would be they they use serverless
functions
so you can write some code and that code
will be available to be run
and called from the front end at any
time right
how does being serverless work with a
database
serverless is just a place so like you
know normally you have an application
server
and then you have a database server it's
the application server except it runs on
any one of a thousand computers
and it runs is that running on the
client side and then it's just all the
clients are doing direct
connections when they say serverless it
doesn't mean there isn't a server it
means it's someone else's server
you're using a cloud server right so
your code is running on one of 20
machines
but it's running on a server i see like
in any well
like on ews or netlify or any of those
types of things
okay now in this case if you're using
firebase it will be run at google
because firebase is a google product
okay and that's just the product that
that i they were one of the first to
kind of come out with that
now there's an azure version aws really
doesn't have
a good one and i'm actually so i'm
switching over to mongodb
but it it has it follows a lot closer to
the philosophy than
than ruby on rails to firebase longer to
be
closer to firebase right because it's
more
serverless functions and stuff um
okay cool so i guess because i started
to work on the like
the listing out all the features of just
confronting itself like
regardless if we're going ruby or
or firebase or whatever and that got
like big fast
so first i'm like okay let's just take a
step back and try to figure out like
which of the because a part of it is
well your requirements shouldn't i mean
requirements shouldn't have any
technology
right in them right yeah yeah exactly
but i think
a part of it is if there's something
okay i want these features
okay well if we're going with with rails
then the
the main idea is to use existing gems
and so a part of it is you're restricted
based on what gems there are
um and you can do custom development but
if you go heavy down that road then what
was the point in using rails in the
first place
yeah yeah i mean um
i mean rails could do
anything firebase can
uh because they're both general purpose
language right yeah
it just sounds like the custom
development
might be a bit more arduous in rails
is that well no i mean it would be for
me because i don't know it
but if you ever if you have a if you
have a skilled rails dev at a skilled
it might be a little bit because rails
doesn't include the database
well it kind of does because i think you
could write that
i can't remember now which way rails
goes i guess it may actually
when you write the ruby code it may
generate the database
yeah i'm not sure i would imagine
there's probably a ton of gems to help
handle that so you can pick like what
kind of database you're going to use
here's library of gems too
that's they're so they're tech that's
the active record tech
that they're listing out there and i
just don't remember what their active
record
is which way it goes um right now
i see okay i wrote a little bit of it
some of the stuff you you write the code
and it builds the database so you don't
have to worry about the database and
somebody you write the database and it
builds some code
right um either way it's a it's a way
where you only have to write half of it
um okay cool
all right yeah i mean it sounds like
then i don't need to go rails if there's
already these collections out there
um i might go and shop around and see if
i can find a similar
article for firebase just to see what
sort of
things are for that um it i wasn't so
much attached to
particular gems more just the idea of
hey here's this
collection of features that we can build
out relatively easily
to you know a from scratch project
um but if firebase can do that too then
it's just that's all i actually care
about
it's really hard to compare
right i guess i kind of like that
firebase is newer
because that means that the information
you'll find out there is more look more
likely to be current because that was
definitely a problem as i was going
through articles i'm like oh this is
neat oh that's four years old
okay no i i don't care about the article
well i mean they've
they've made some significant changes to
firebase so you get some of that
um but yeah
yeah yeah i don't know i mean in the end
i think whenever
um
i don't think anyone's shown that any
spectacular
tech stack is significantly faster to
develop in
um like a full stack right
so it really comes down to what what's
your devs now
it's usually the deciding factor unless
you're building
something really simple and then you
should go with squarespace right
because if you don't have any custom
functionality then you don't even need a
developer
but if you need a developer then it's
probably more driven by their stack
right i don't know yeah i don't think
any of the stacks are
significantly faster okay um
and then like the firebase react
whatever stack that is
that's a fairly popular one that like
there will be a decent number of
det developers that can work in that
yeah
yeah okay yeah i mean it's not so react
being the front end there'll be a lot of
devs doing that that is the most popular
front end
i think firebase is the back end will
narrow down the people but most anyone
can learn it
it's not right it's not a whole it's a
big enough one that they wouldn't have
like
and it sort of seems to be gaining
popularity from what i can tell so it's
not
actually yeah and actually the like it
uses a lot of serverless functions and
that same
technology if you know it it it
basically applies to
to azure microsoft azure as well and
mongodb so they all use that sort of
tech
it's less specific the only times you
get into really specific stuff
is the identity and authorization but
actually that
it's mostly plug and play so okay yeah i
think
um you'd either be able to find people
or they would be able to adapt
pretty quickly right and it's a popular
technology so they wouldn't be wasting
their time by learning it which is good
right yeah cool okay nice yeah i'll take
a look around but that definitely sounds
better from what i was reading because
like they kept mentioning prototypes but
then
they also sort of like yeah the general
vibe i got is that not a lot of
developers take rails terribly seriously
well yeah yeah i haven't heard about it
a lot except from you in the last year
or two but
i did some reading it sounds like they
were coming out with
ruby 3.0 and like that just in the wrong
group of people yeah
i i mean that's a part of what i was
sort of wondering is like
is it good but like you have to be a
ruby developer and know the gems and
know this and like oh yeah
i've been working on it here's the gems
used to create this sweet stack
but then it's also possible that it's
like yeah it's a sweet stack you're like
yeah i could
create that in firebase and now you're
using old tech and you're limited in
the developers and so on so i mean the
system that has the most plug-ins is
wordpress
so if you want the quickest prototype
wordpress is it uh all right i gotta let
you go
all right cool thank you for your time
bentley sure bye cheers